#include <cs50.h>
#include <ctype.h>
#include <stdio.h>
#include <stdlib.h>
#include <string.h>

int check(const char *input);
char *crosscheck(const char key1[], const char *abc);

int main(int argc, string argv[])
{
    char key[26];
    string plaintext;
    // printf("The key is : %s\n", argv[1]);

    if (argc != 2)
    {
        printf("Usage: ./substitution key\n");
        return 1;
    }
    else if (strlen(argv[1]) != 26)
    {
        printf("Key must contain 26 characters.\n");
        return 1;
    }

    else
    {
        if ((strlen(argv[1]) == 26) && (check(argv[1]) == 1))
        {
            printf("\n%i\n\n", check(argv[1]));
            printf("Usage: ./substitution key\n");
            return 1;
        }
        else if ((strlen(argv[1])) == 26 && (check(argv[1]) == 0))
        {
            for (int i = 0; i < 26; i++)
            {
                key[i] = argv[1][i];
            }
            plaintext = get_string("Plain Text:");
            printf("ciphertext:%s\n", crosscheck(key, plaintext));
        }
    }
}

int check(const char *input)
{
    int count[26] = {0};
    int value = 0;
    char characters[] = {'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M',
                         'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z'};
    for (int k = 0; k < 26; k++)
    {
        if ((input[k] >= 'a' && input[k] <= 'z') || (input[k] >= 'A' && input[k] <= 'Z'))
        {
            for (int j = 0; j < 26; j++)
            {
                if ((toupper(input[k])) == (characters[j]))
                {
                    count[j]++;
                    if (count[j] > 1)
                    {
                        value = 1;
                        break;
                    }
                }
            }
        }
        else
        {
            value = 1;
            break;
        }
        // printf("\n");
    }
    return value;
}

char *crosscheck(const char key1[], const char *abc)
{
    // printf("\n%s\n",key1);
    // printf("%s\n",abc);
    const int length = strlen(abc);
    char plaintext1[length];
    // printf("%d",length);
    char characters[] = {'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M',
                         'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z'};

    for (int i = 0; i < (length + 1); i++)
    {
        for (int j = 0; j < 26; j++)
        {
            if ((abc[i] >= 'a' && abc[i] <= 'z') || (abc[i] >= 'A' && abc[i] <= 'Z'))
            {
                if ((abc[i] == toupper(characters[j])) || (abc[i] == tolower(characters[j])))
                {
                    if (abc[i] >= 'a' && abc[i] <= 'z')
                    {
                        plaintext1[i] = tolower(key1[j]);
                    }
                    else if (abc[i] >= 'A' && abc[i] <= 'Z')
                    {
                        plaintext1[i] = toupper(key1[j]);
                    }
                }
            }
            else
            {
                plaintext1[i] = abc[i];
            }
        }
        // printf("%s\n",plaintext1);
    }

    // printf("\n%s\n",plaintext1);
    // printf("%lu\n",strlen(plaintext1));

    char *plaintext2 = (char *) malloc(1000);
    strcpy(plaintext2, plaintext1);

    return plaintext2;
}
